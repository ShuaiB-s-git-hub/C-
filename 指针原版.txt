​	c语言最牛逼的地方可以说就是指针了！在后续课程中，比如说数据结构中，基本全是指针。

### 内存与内存地址

​	正如要孩子需要有老婆一样，学指针就需要知道内存这个概念。

​	内存就是直接跟CPU连着的那个存储器，而为了方便CPU进行访问，我们把内存划分成了一个个的存储单元，每个单元大小为1 byte==8 bit 。

​	这就好像你去酒店开房，你一进酒店，就发现有一个个的房间，这个房间就是内存的存储单元，每个房间都有门牌号吧？这个门牌号就是这个房间的地址；那么同理，内存单元也有其地址。操作系统将每个内存单元都编了个序号，这就是内存单元的地址了。

​	在酒店里，我们拿到房卡就知道我们要住到哪个房间了，因为房卡上有房间的地址，比如说我拿到的是405的房卡，这里我们就可以说这张房卡指向405房间。同理，我们知道内存的编号之后，我们就可以说这串编号指向该内存单元。指针，望文生义就是指向并针对你进行操作。我们可以拿到房卡之后走到房间门口，刷卡进入，对房间进行操作；那么我们知道内存单元的地址之后我们就可以针对内存单元进行操作，这就是指针，可以说酒店房间的指针是房卡，那么c语言的指针就是内存单元的地址。



### 指针变量

#### （1）指针变量的概念

​	如果有一个变量专门用来存放另一个变量的地址，则称这个变量为“指针变量”，也就是说C语言中有一
类变量是专门用来存储（指向）地址的，我们将它称为“指针变量”，指针变量的中存储的地址可以被改
变，也就是可以改变指针变量的指向，就好比一张纸或一个小本本，写着一个房间的房间号，那把这个房间的房间号擦掉，写上另一个房间的房间号也是可以的，这就是指针变量和指针常量最大的区别所在了，可以改变指针变量的指向。

#### （2）指针变量的定义

定义指针变量的一般格式：
		类型名 * 指针变量名;
例如：

```c
int *p,*q;
char *p1,*q1;
double *p2,*q2;
```

注意：左端的int、char等是在定义指针变量时必须指定的“基类型”。指针变量的基类型用来规定此指针
变量可以指向的变量的类型。如：上面定义的p和q只能用于指向int整型变量的地址，p2和q2只能用于
指向double双精度类型变量的地址。

#### （3）指针变量的引用

与指针和地址相关的运算符： * （指针运算符）和 & （取地址运算符）   //区别对待位运算符&
例如：

```c
int a,*p;
p=&a;  // p是指针变量，用于保存指针常量&a
*p=10;
```

在引用指针变量时，有以下几种情况：
①给指针变量赋值
如：

```c
int a = 10,b=20;
int *p=&a;  //定义一个整型指针变量p，初始化p的值为a的地址，也就是p指向a地址
```

②解引用：

```c
*p=30; //通过指针变量p引用a变量，改变a的值为30
			//这里的’*’为解引用符号，p引用指针变量p所指向地址中对应的值
scanf(“%d”,p); //scanf通过指针变量p给变量a赋值
printf(“%d\n”,*p); //通过指针变量p输出变量a的值
*p=b; //将b的值放入指针变量p所指向的内存地址中（a的地址单元中）
p=&b; //改变指针p的指向，指针p不再指向a的地址了，而是指向b的地址
printf(“%d\n”,*p); //输出变量b的值
```

③输出内存地址编号

```c
printf(“%p\n”,p); 		//以十六进制的格式输出指针变量p所指向地址的内存地址编号
printf(“%d\n”,&a);    //以十进制的格式输出变量a所在的内存地址编号
printf(“%o\n”,&b);	  //以八进制的格式输出变量b所在的内存地址编号
printf(“%p\n”,&p); 	 //以十六进制的格式输出指针变量p所在的内存地址编号
```



#### 动态内存分配与指向它的指针变量

1、什么是动态内存分配
	动态内存分配就是使用户可以根据自己的需要，向系统申请所需大小的内存空间（在堆区申请）；由于没有声明部分来定义它们是为变量的地址还是为数组的地址，所有只能通过指针来引用它们。

​	我们在很多时候，是无法直接确定一个数组的大小的，而C语言本身却不支持柔性数组（虽然个别的编译器是支持的。）而这个时候就可以使用动态内存分配了。

2、怎样建立内存的动态分配

①使用malloc()函数
②使用calloc()函数
③使用realloc()函数
④使用free()函数

这些函数的具体使用可以自己查查，懒得写了。



可以参考一位老哥的博客，这个实在是太多了，真的不想写了。

https://blog.csdn.net/kjl167/article/details/123799963



要进行补充说明的是：

​	在堆区申请的内存要记得用完后要手动free掉，不然内存是不会自己释放的。

​	内存释放的意思就是把内存变回原来的样子，大抵是一堆乱码，原来的数据将不复存焉！但是free后，指针依旧会指向那块内存，为了防止指针误伤那块内存，所以记得把它给置成NULL ！